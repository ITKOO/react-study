{"ast":null,"code":"import _classCallCheck from \"/Users/koojiwon/Desktop/phone-book-itkoo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/koojiwon/Desktop/phone-book-itkoo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/koojiwon/Desktop/phone-book-itkoo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/koojiwon/Desktop/phone-book-itkoo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/koojiwon/Desktop/phone-book-itkoo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/koojiwon/Desktop/phone-book-itkoo/src/components/PhoneInfoList.js\";\nimport React, { Component } from \"react\";\nimport PhoneInfo from \"./PhoneInfo\";\n\nvar PhoneInfoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PhoneInfoList, _Component);\n\n  function PhoneInfoList() {\n    _classCallCheck(this, PhoneInfoList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PhoneInfoList).apply(this, arguments));\n  }\n\n  _createClass(PhoneInfoList, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      console.log(nextState);\n      return nextProps.data !== this.props.data;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"render PhoneInfoList\");\n      var _this$props = this.props,\n          data = _this$props.data,\n          onRemove = _this$props.onRemove,\n          onUpdate = _this$props.onUpdate; // 배열을 렌더링 하게 될 때에는 꼭 고유값을 key 로 사용해야 함!!! 여기서는 id!!\n\n      var list = data.map(function (info) {\n        return React.createElement(PhoneInfo, {\n          key: info.id,\n          info: info,\n          onRemove: onRemove,\n          onUpdate: onUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, list);\n    }\n  }]);\n\n  return PhoneInfoList;\n}(Component);\n\nPhoneInfoList.defaultProps = {\n  list: [],\n  onRemove: function onRemove() {\n    return console.warn(\"onRemove not defined\");\n  },\n  onUpdate: function onUpdate() {\n    return console.warn(\"onUpdate not defined\");\n  }\n};\nexport default PhoneInfoList;","map":{"version":3,"sources":["/Users/koojiwon/Desktop/phone-book-itkoo/src/components/PhoneInfoList.js"],"names":["React","Component","PhoneInfo","PhoneInfoList","nextProps","nextState","console","log","data","props","onRemove","onUpdate","list","map","info","id","defaultProps","warn"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;IAEMC,a;;;;;;;;;;;;;0CAOkBC,S,EAAWC,S,EAAW;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,aAAOD,SAAS,CAACI,IAAV,KAAmB,KAAKC,KAAL,CAAWD,IAArC;AACD;;;6BAEQ;AACPF,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AADO,wBAE8B,KAAKE,KAFnC;AAAA,UAECD,IAFD,eAECA,IAFD;AAAA,UAEOE,QAFP,eAEOA,QAFP;AAAA,UAEiBC,QAFjB,eAEiBA,QAFjB,EAGP;;AACA,UAAMC,IAAI,GAAGJ,IAAI,CAACK,GAAL,CAAS,UAAAC,IAAI;AAAA,eACxB,oBAAC,SAAD;AACE,UAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,UAAA,IAAI,EAAED,IAFR;AAGE,UAAA,QAAQ,EAAEJ,QAHZ;AAIE,UAAA,QAAQ,EAAEC,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADwB;AAAA,OAAb,CAAb;AAQA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMC,IAAN,CAAP;AACD;;;;EAzByBX,S;;AAAtBE,a,CACGa,Y,GAAe;AACpBJ,EAAAA,IAAI,EAAE,EADc;AAEpBF,EAAAA,QAAQ,EAAE;AAAA,WAAMJ,OAAO,CAACW,IAAR,CAAa,sBAAb,CAAN;AAAA,GAFU;AAGpBN,EAAAA,QAAQ,EAAE;AAAA,WAAML,OAAO,CAACW,IAAR,CAAa,sBAAb,CAAN;AAAA;AAHU,C;AA2BxB,eAAed,aAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PhoneInfo from \"./PhoneInfo\";\n\nclass PhoneInfoList extends Component {\n  static defaultProps = {\n    list: [],\n    onRemove: () => console.warn(\"onRemove not defined\"),\n    onUpdate: () => console.warn(\"onUpdate not defined\")\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(nextState);\n    return nextProps.data !== this.props.data;\n  }\n\n  render() {\n    console.log(\"render PhoneInfoList\");\n    const { data, onRemove, onUpdate } = this.props;\n    // 배열을 렌더링 하게 될 때에는 꼭 고유값을 key 로 사용해야 함!!! 여기서는 id!!\n    const list = data.map(info => (\n      <PhoneInfo\n        key={info.id}\n        info={info}\n        onRemove={onRemove}\n        onUpdate={onUpdate}\n      />\n    ));\n    return <div>{list}</div>;\n  }\n}\n\nexport default PhoneInfoList;\n"]},"metadata":{},"sourceType":"module"}